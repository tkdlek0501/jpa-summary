#server.port=9000

#=== DB 세팅

#spring.datasource.url = jdbc:h2:mem:test
#?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul
#spring.datasource.username = sa
#spring.datasource.password = 
#spring.datasource.dbcp2.driver-class-name = org.h2.Driver

#=== JPA 세팅

#애플리케이션 실행 시점에 테이블 새로 생성: 진짜 DB를 jpa를 통해 drop 후 create 하게됨
#spring.jpa.hibernate.ddl-auto= create
#spring.jpa.properties.hibernate.show_sql= true  ;sysout 으로 나옴
#spring.jpa.properties.hibernate.format_sql= true

# OSIV는 true(기본값)이면 transaction 종료시에도 영속 상태를 유지하고 DB 커넥션도 유지 (이 때문에 지연로딩이 가능 but 연결을 오래 유지하면 문제 발생 가능)
# false 이면 transaction 종료시 영속성 컨텍스트 닫고, DB 커넥션도 반환 
# 결론: 커맨드와 쿼리를 분리해야 한다. (view, controller 단에서 쿼리를 사용치 않고 서비스 계층을 통해서만 쿼리를 날리도록 해야한다)
# ADMIN 페이지처럼 커넥션을 많이 사용하지 않는 애플리케이션이면 true로 설정해도 된다
spring.jpa.open-in-view=false



# log로 나옴
logging.level.org.hibernate.SQL= debug
logging.level.org.hibernate.type= trace
#logging.level.org.apache.coyote.http11=debug

# max file size 
#spring.servlet.multipart.maxFileSize=50000MB
#spring.servlet.multipart.maxRequestSize=50000MB